{
  "name": "node-red-node-serialport",
  "version": "0.1.2",
  "description": "Node-RED nodes to talk to an serial port",
  "dependencies": {
    "serialport": "2.0.*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/node-red/node-red-nodes/tree/master/io/serialport"
  },
  "license": "Apache-2.0",
  "keywords": [
    "node-red",
    "serial"
  ],
  "node-red": {
    "nodes": {
      "serialport": "25-serial.js"
    }
  },
  "author": {
    "name": "Dave Conway-Jones",
    "email": "ceejay@vnet.ibm.com",
    "url": "http://nodered.org"
  },
  "readme": "node-red-node-serialport\n========================\n\n<a href=\"http://nodered.org\" target=\"_new\">Node-RED</a> nodes to talk to a\nhardware Serial port.\n\n**Note** : The version 0.1.x of this package requires underlying serialport\nv2.0.x\n\nEarlier versions of node.js, as found on default Debian install on a Raspberry Pi, require an\nupdated version of npm. See below. Or you can install the older version of\nthis node - node-red-node-serialport@0.0.5\n\nInstall\n-------\n\nRun the following command in your Node-RED user directory (typically `~/.node-red`):\n\n        npm i node-red-node-serialport\n\nFor versions on node.js prior to 4.x (ie v0.10.x and v0.12.x) please install using\n\n        sudo npm i -g npm@2.x\n        npm i node-red-node-serialport\n\nYou may also have to install or upgrade GCC to be version 4.8 or better.\nAlternatively you can simply install the older version of this node.\n\n        npm install node-red-node-serialport@0.0.5\n\nDuring install there may be multiple messages about optional compilation.\nThese may look like failures... as they report as failure to compile errors -\nbut often are warnings and the node will continue to install and, assuming nothing else\nfailed, you should be able to use it. Occasionally some platforms *will* require\nyou to install the full set of tools in order to compile the underlying package.\n\n\nUsage\n-----\n\nProvides two nodes - one to receive messages, and one to send.\n\n### Input\n\nReads data from a local serial port.\n\nClicking on the search icon will attempt to autodetect serial ports attached to\nthe device, however you many need to manually specify it. COM1, /dev/ttyUSB0, etc\n\nIt can either\n\n - wait for a \"split\" character (default \\n). Also accepts hex notation (0x0a).\n - wait for a timeout in milliseconds for the first character received\n - wait to fill a fixed sized buffer\n\nIt then outputs `msg.payload` as either a UTF8 ascii string or a binary Buffer object.\n\nIf no split character is specified, or a timeout or buffer size of 0, then a stream\nof single characters is sent - again either as ascii chars or size 1 binary buffers.\n\n### Output\n\nProvides a connection to an outbound serial port.\n\nOnly the `msg.payload` is sent.\n\nOptionally the new line character used to split the input can be appended to every message sent out to the serial port.\n",
  "readmeFilename": "README.md",
  "_id": "node-red-node-serialport@0.1.2",
  "_from": "node-red-node-serialport@0.1.*"
}
